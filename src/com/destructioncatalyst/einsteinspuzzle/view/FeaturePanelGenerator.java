package com.destructioncatalyst.einsteinspuzzle.view;

import com.destructioncatalyst.einsteinspuzzle.view.tables.AttributeTable;

import javax.swing.*;
import java.awt.*;

public class FeaturePanelGenerator {

    private JPanel panel;
    private JLabel insertAttribLabel;
    private JScrollPane scrollPane;
    private JButton nextButton;
    private JTable table1;
    private JButton helpButton;
    private int dimension;
    private int objectCount;

    public FeaturePanelGenerator(int dimension, int objectCount, JFrame containerFrame) {

        this.dimension = dimension;
        this.objectCount = objectCount;

        $$$setupUI$$$();

        scrollPane.getVerticalScrollBar().setUnitIncrement(10);
        scrollPane.getHorizontalScrollBar().setUnitIncrement(10);

        scrollPane.setVisible(true);

        /*
        attribPanel.setLayout(null);
        attribPanel.setPreferredSize(new Dimension(
                (horizontalPadding * 2) + labelWidth + (textFieldWidth + horizontalPadding) * objectCount,
                verticalPadding + dimension * (lineHeight + verticalPadding)));

        for (int i = 0; i < dimension; i++) {

            labels[i] = new JLabel("Атрибут " + (i + 1));
            labels[i].setBounds(horizontalPadding,
                    verticalPadding + i * (lineHeight + verticalPadding),
                    labelWidth,
                    lineHeight);
            labels[i].setFont(new Font(labels[i].getFont().getName(), Font.BOLD, 20));
            attribPanel.add(labels[i]);

            for (int j = 0; j < objectCount; j++) {
                textFields[i][j] = new JTextField();
                textFields[i][j].setBounds(
                        (horizontalPadding * 2) + labelWidth + (textFieldWidth + horizontalPadding) * j,
                        verticalPadding + i * (lineHeight + verticalPadding),
                        textFieldWidth,
                        lineHeight);
                attribPanel.add(textFields[i][j]);
            }
        }

        */


    }


    public JPanel getPanel() {

        return panel;
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        createUIComponents();
        final JScrollPane scrollPane1 = new JScrollPane();
        panel = new JPanel();
        panel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(2, 3, new Insets(0, 0, 0, 0), -1, -1));
        scrollPane1.setViewportView(panel);
        insertAttribLabel = new JLabel();
        Font insertAttribLabelFont = this.$$$getFont$$$(null, -1, 20, insertAttribLabel.getFont());
        if (insertAttribLabelFont != null) insertAttribLabel.setFont(insertAttribLabelFont);
        insertAttribLabel.setHorizontalAlignment(0);
        insertAttribLabel.setHorizontalTextPosition(0);
        insertAttribLabel.setText("Введите значения аттрибутов:");
        panel.add(insertAttribLabel, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        scrollPane = new JScrollPane();
        scrollPane.setHorizontalScrollBarPolicy(30);
        scrollPane.setVerticalScrollBarPolicy(20);
        panel.add(scrollPane, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 3, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        table1.setFocusCycleRoot(false);
        scrollPane.setViewportView(table1);
        nextButton = new JButton();
        nextButton.setHorizontalAlignment(0);
        nextButton.setHorizontalTextPosition(2);
        nextButton.setMargin(new Insets(5, 5, 5, 5));
        nextButton.setText("Далее");
        nextButton.setVerticalAlignment(0);
        nextButton.setVerticalTextPosition(3);
        panel.add(nextButton, new com.intellij.uiDesigner.core.GridConstraints(0, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_SOUTHWEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, 1, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(200, -1), null, 0, false));
        helpButton = new JButton();
        helpButton.setHorizontalAlignment(0);
        helpButton.setHorizontalTextPosition(2);
        helpButton.setMargin(new Insets(5, 5, 5, 5));
        helpButton.setText("Помощь");
        helpButton.setVerticalAlignment(0);
        helpButton.setVerticalTextPosition(3);
        panel.add(helpButton, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_SOUTHWEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, 1, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(200, -1), null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        return new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
    }

    private void createUIComponents() {
        // TODO: place custom component creation code here
        table1 = new AttributeTable(AttributeTable.generateTableModel(dimension, objectCount));
    }
}
